/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/imodels/storageConnections/{connectionId}/run": {
    /**
     * ---
     *
     * Runs the specified StorageConnection.
     *
     * ### Notes
     *
     * When a run is successfully created, the operation returns HTTP status code 202/accepted - the request is accepted for processing and will execute in background. The response will include a location header pointing to the created run. If an existing active run already exists for the iModel, a new run is not initiated, instead 303/see other is returned along with location header pointing to that existing active run.
     * In the rare event that multiple create run requests are being made simultaneously, only the first request is processed and 409/conflict is returned for others.
     *
     * ### Authentication
     *
     * Requires `Authorization` header with valid Bearer token for scope `synchronization:modify`.
     *
     * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
     *
     * ---
     */
    post: operations["run-storage-connection"];
  };
  "/imodels/storageConnections/{connectionId}/sourcefiles": {
    /**
     * ---
     *
     * Retrieves SourceFiles for specified StorageConnection.
     *
     * ### Notes
     *
     * The `Prefer` header can be used to specify how much result metadata is desired by the client. The `Prefer` request header field is used to indicate that particular server behaviors are preferred by the client but are not required for successful completion of the request.
     *
     * This operation supports `"return=representation"` and `"return=minimal"` preferences.
     *
     * The `"return=representation"` preference indicates that the client prefers that the server include an entity representing the current state of the resource in the response to a successful request.
     * The `"return=minimal"` preference indicates that the client wishes the server to return only a minimal response to a successful request. This is the default preference if `Prefer` header is not specified.
     *
     * ### Authentication
     *
     * Requires `Authorization` header with valid Bearer token for scope `synchronization:read`.
     *
     * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
     *
     * ---
     */
    get: operations["get-storage-connection-sourcefiles"];
    /**
     * ---
     *
     * Add a new Storage Source File to a Storage Connection
     *
     * ### Authentication
     *
     * Requires `Authorization` header with valid Bearer token for scope `synchronization:modify`.
     *
     * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
     *
     * ### Associated entities
     * SourceFile is added to a Connection. The reuqest path must contain a valid Connection ID
     *
     * ---
     */
    post: operations["add-storage-connection-sourcefile"];
  };
  "/imodels/storageConnections/{connectionId}/sourcefiles/{sourceFileId}": {
    /**
     * ---
     *
     * Retrieves StorageConnection's SourceFile with the specified ID.
     *
     * ### Authentication
     *
     * Requires `Authorization` header with valid Bearer token for scope `synchronization:read`.
     *
     * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
     *
     * ---
     */
    get: operations["get-storage-connection-sourcefile"];
    /**
     * ---
     *
     * Update an existing StorageConnection SourceFile.
     *
     * ### Authentication
     *
     * Requires `Authorization` header with valid Bearer token for scope `synchronization:modify`.
     *
     * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
     *
     * ### Associated entities
     * SourceFile is related to a Connection. The path must contain a valid Connection ID.
     *
     * ---
     */
    put: operations["update-storage-connection-sourcefile"];
    /**
     * ---
     *
     * Delete StorageConnection SourceFile
     *
     * ### Authentication
     *
     * Requires `Authorization` header with valid Bearer token for scope `synchronization:modify`.
     *
     * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
     *
     *
     * ---
     */
    delete: operations["remove-storage-connection-sourcefile"];
  };
  "/imodels/storageConnections": {
    /**
     * ---
     *
     * Create a StorageConnection that describes files from Storage to synchronize to the iModel.
     *
     * ### Authentication
     *
     * Requires `Authorization` header with valid Bearer token for scope `synchronization:modify`.
     *
     * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
     *
     * ### Associated entities
     *
     * A connection is linked with an iModel. An iModel ID is required to be set when creating a StorageConnection.
     *
     * ---
     */
    post: operations["create-storage-connection"];
  };
  "/imodels/storageConnections/{connectionId}": {
    /**
     * ---
     *
     * Retrieves a StorageConnection with the specified ID.
     *
     * ### Authentication
     *
     * Requires `Authorization` header with valid Bearer token for scope `synchronization:read`.
     *
     * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
     *
     * ---
     */
    get: operations["get-storage-connection"];
    /**
     * ---
     *
     * Update an existing StorageConnection.
     *
     * ### Authentication
     *
     * Requires `Authorization` header with valid Bearer token for scope `synchronization:modify`.
     *
     * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
     *
     * ### Associated entities
     *
     * A connection is linked with an iModel. The iModel ID is required to be set when updating a StorageConnection.
     *
     * ---
     */
    put: operations["update-storage-connection"];
    /**
     * ---
     *
     * Delete connection
     *
     * ### Authentication
     *
     * Requires `Authorization` header with valid Bearer token for scope `synchronization:modify`.
     *
     * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
     *
     *
     * ---
     */
    delete: operations["delete-storage-connection"];
  };
  "/imodels/connections": {
    /**
     * ---
     *
     * Retrieves connections for the specified iModel.
     *
     * ### Notes
     *
     * The `Prefer` header can be used to specify how much result metadata is desired by the client. The `Prefer` request header field is used to indicate that particular server behaviors are preferred by the client but are not required for successful completion of the request.
     *
     * This operation supports `"return=representation"` and `"return=minimal"` preferences.
     *
     * The `"return=representation"` preference indicates that the client prefers that the server include an entity representing the current state of the resource in the response to a successful request.
     * The `"return=minimal"` preference indicates that the client wishes the server to return only a minimal response to a successful request. This is the default preference if `Prefer` header is not specified.
     *
     * ### Authentication
     *
     * Requires `Authorization` header with valid Bearer token for scope `synchronization:read`.
     *
     * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
     *
     * ---
     */
    get: operations["get-connections"];
  };
  "/imodels/manifestConnections/{connectionId}/runs/{runId}": {
    /**
     * ---
     *
     * Retrieves a ManifestConnection Run with the specified ID.
     *
     * ### Authentication
     *
     * Requires `Authorization` header with valid Bearer token for scope `synchronization:read`.
     *
     * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
     *
     * ---
     */
    get: operations["get-manifest-connection-run"];
  };
  "/imodels/manifestConnections/{connectionId}": {
    /**
     * ---
     *
     * Retrieves a ManifestConnection with the specified ID.
     *
     * ### Authentication
     *
     * Requires `Authorization` header with valid Bearer token for scope `synchronization:read`.
     *
     * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
     *
     * ---
     */
    get: operations["get-manifest-connection"];
    /**
     * ---
     *
     * Delete connection
     *
     * ### Authentication
     *
     * Requires `Authorization` header with valid Bearer token for scope `synchronization:modify`.
     *
     * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
     *
     *
     * ---
     */
    delete: operations["delete-manifest-connection"];
  };
  "/imodels/manifestConnections": {
    /**
     * ---
     *
     * Create a ManifestConnection that describes which files from a manifest will be synchronized to the iModel.
     *
     * ### Authentication
     *
     * Requires `Authorization` header with valid Bearer token for scope `synchronization:modify`.
     *
     * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
     *
     * ### Associated entities
     *
     * A connection is linked with an iModel. An iModel ID is required to be set when creating a ManifestConnection.
     *
     * ---
     */
    post: operations["create-manifest-connection"];
  };
  "/imodels/manifestConnections/{connectionId}/runs": {
    /**
     * ---
     *
     * Runs the specified ManifestConnection.
     *
     * ### Notes
     *
     * When a run is successfully created, the operation returns HTTP status code 202/accepted - the request is accepted for processing and will execute in background. The response will include a location header pointing to the created run. If an existing active run already exists for the iModel, a new run is not initiated, instead 303/see other is returned along with location header pointing to that existing active run.
     * In the rare event that multiple create run requests are being made simultaneously, only the first request is processed and 409/conflict is returned for others.
     *
     * ### Authentication
     *
     * Requires `Authorization` header with valid Bearer token for scope `synchronization:modify`.
     *
     * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
     *
     * ---
     */
    post: operations["create-manifest-connection-run"];
  };
  "/imodels/storageConnections/{connectionId}/runs": {
    /**
     * ---
     *
     * Retrieves all Runs for the specified connection.
     *
     * ### Notes
     *
     * The `Prefer` header can be used to specify how much result metadata is desired by the client. The `Prefer` request header field is used to indicate that particular server behaviors are preferred by the client but are not required for successful completion of the request.
     *
     * This operation supports `"return=representation"` and `"return=minimal"` preferences.
     *
     * The `"return=representation"` preference indicates that the client prefers that the server include an entity representing the current state of the resource in the response to a successful request.
     * The `"return=minimal"` preference indicates that the client wishes the server to return only a minimal response to a successful request. This is the default preference if `Prefer` header is not specified.
     *
     * ### Authentication
     *
     * Requires `Authorization` header with valid Bearer token for scope `synchronization:read`.
     *
     * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
     *
     * ---
     */
    get: operations["get-storage-connection-runs"];
  };
  "/imodels/storageConnections/{connectionId}/runs/{runId}": {
    /**
     * ---
     *
     * Retrieves a StorageConnection Run with the specified ID.
     *
     * ### Authentication
     *
     * Requires `Authorization` header with valid Bearer token for scope `synchronization:read`.
     *
     * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
     *
     * ---
     */
    get: operations["get-storage-connection-run"];
  };
  "/imodels/connections/authorizationInformation": {
    /**
     * ---
     *
     * Retrieves the calling user's AuthorizationInformation.
     *
     * ### Authentication
     *
     * Requires `Authorization` header with valid Bearer token for scope `synchronization:read`.
     *
     * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
     *
     * ---
     */
    get: operations["get-authorization-information"];
  };
}

export interface components {
  schemas: {
    /** AuthorizationInformation */
    AuthorizationInformation: {
      isUserAuthorized?: boolean;
      _links?: components["schemas"]["authorization-information-links"];
    };
    /** AuthorizationInformation Response */
    "authorization-information-response": {
      authorizationInformation?: components["schemas"]["AuthorizationInformation"];
    };
    /** AuthorizationInformationLinks */
    "authorization-information-links": {
      authorizationUrl?: components["schemas"]["Link"];
    };
    /** Connections (prefer return=minimal) */
    "connections-prefer-return-minimal": {
      connections?: components["schemas"]["connection-summary"][];
      _links?: components["schemas"]["Links"];
    };
    /** Connections (prefer return=representation) */
    "connections-prefer-return-representation": {
      connections?: components["schemas"]["Connection"][];
      _links?: components["schemas"]["Links"];
    };
    Connection: {
      id?: string;
      displayName?: string;
      iModelId?: string;
      _links?: components["schemas"]["connection-links"];
    };
    /** Connection (summary) */
    "connection-summary": {
      id?: string;
      displayName?: string;
    };
    /** Storage Connection */
    StorageConnection: {
      authenticationType?: components["schemas"]["authenticationType"];
      id?: string;
      displayName?: string;
      iModelId?: string;
      _links?: components["schemas"]["connection-links"];
    };
    /** Storage connection response */
    "storage-connection-response": {
      connection?: components["schemas"]["StorageConnection"];
    };
    /** Storage Connection (summary) */
    "storage-connection-summary": {
      id?: string;
      displayName?: string;
    };
    /** Storage Connection (create) */
    "storage-connection-create": {
      authenticationType?: components["schemas"]["authenticationType"];
      displayName?: string;
      iModelId: string;
      sourceFiles: components["schemas"]["storage-file-create"][];
    };
    /** Manifest Connection */
    ManifestConnection: {
      authenticationType?: components["schemas"]["authenticationType"];
      id?: string;
      displayName?: string;
      iModelId?: string;
      _links?: components["schemas"]["connection-links"];
    };
    /** Manifest connection response */
    "manifest-connection-response": {
      connection?: components["schemas"]["ManifestConnection"];
    };
    /** Manifest Connection (summary) */
    "manifest-connection-summary": {
      id?: string;
      displayName?: string;
    };
    /** Manifest Connection (create) */
    "manifest-connection-create": {
      authenticationType?: components["schemas"]["authenticationType"];
      displayName?: string;
      iModelId: string;
      sourceFiles: components["schemas"]["manifest-file-create"][];
    };
    /**
     * Authentication Type
     * @description One of 'User' or 'Service'
     */
    authenticationType: "User" | "Service";
    /** Runs (prefer return=minimal) */
    "storage-runs-prefer-return-minimal": {
      runs?: components["schemas"]["run-summary"][];
    };
    /** Run response */
    "manifest-run-response": {
      run?: components["schemas"]["manifest-run"];
    };
    /** Manifest Connection Run */
    "manifest-run": {
      id?: string;
      connectionId?: string;
      startDateTime?: string;
      endDateTime?: string;
      phase?: components["schemas"]["job-phase"];
      state?: components["schemas"]["execution-state"];
      result?: components["schemas"]["execution-result"];
      jobs?: components["schemas"]["manifest-job"][];
    };
    /** Manifest Connection Run's Job */
    "manifest-job": {
      id?: string;
      startDateTime?: string;
      endDateTime?: string;
      state?: string;
      result?: string;
      connectorType?: components["schemas"]["connector-type"];
      tasks?: components["schemas"]["manifest-task"][];
    };
    /** Manifest Connection Run Job's Task */
    "manifest-task": {
      id?: string;
      startDateTime?: string;
      endDateTime?: string;
      retryAttempts?: number;
      state?: string;
      result?: string;
      error?: components["schemas"]["task-error"];
    };
    /** Manifest for Run Create */
    "manifest-run-create": {
      sourceFiles?: components["schemas"]["manifest-source-file"][];
    };
    /** Manifest's Source File */
    "manifest-source-file": {
      id?: string;
      name?: string;
      relativePath?: unknown;
      url?: string;
      connector?: string;
      documentMetadata?: { [key: string]: unknown };
      children?: components["schemas"]["manifest-child-file"][];
    };
    /** Manifest Source File's Child File */
    "manifest-child-file": {
      id?: string;
      parentId?: string;
      name?: string;
      relativePath?: unknown;
      url?: string;
      connector?: string;
      documentMetadata?: { [key: string]: unknown };
    };
    /** Runs (prefer return=representation) */
    "storage-runs-prefer-return-representation": {
      runs?: components["schemas"]["storage-run"][];
    };
    /** Run response */
    "storage-run-response": {
      run?: components["schemas"]["storage-run"];
    };
    "storage-run": {
      id?: string;
      connectionId?: string;
      startDateTime?: string;
      endDateTime?: string;
      phase?: components["schemas"]["job-phase"];
      state?: components["schemas"]["execution-state"];
      result?: components["schemas"]["execution-result"];
      jobs?: components["schemas"]["storage-job"][];
    };
    "storage-job": {
      id?: string;
      startDateTime?: string;
      endDateTime?: string;
      state?: string;
      result?: string;
      connectorType?: components["schemas"]["connector-type"];
      tasks?: components["schemas"]["storage-task"][];
    };
    "storage-task": {
      id?: string;
      startDateTime?: string;
      endDateTime?: string;
      retryAttempts?: number;
      storageFileId?: string;
      state?: string;
      result?: string;
      error?: components["schemas"]["task-error"];
    };
    /**
     * Job Phase
     * @description One of 'Preprocessor', 'MasterFile', 'ReferenceFile'.
     */
    "job-phase": "Preprocessor" | "MasterFile" | "ReferenceFile";
    /**
     * Execution State
     * @description One of 'NotStarted', 'Idle', 'WaitingToExecute', 'WaitingToRetry', 'Executing', 'Finalizing', 'Completed', 'Queued'.
     */
    "execution-state":
      | "NotStarted"
      | "Idle"
      | "WaitingToExecute"
      | "WaitingToRetry"
      | "Executing"
      | "Finalizing"
      | "Completed"
      | "Queued";
    /**
     * Execution Result
     * @description One of 'Undetermined', 'Success', 'Error', 'PartialSuccess', 'Skipped', 'Cancelled', 'TimedOut'.
     */
    "execution-result":
      | "Undetermined"
      | "Success"
      | "Error"
      | "PartialSuccess"
      | "Skipped"
      | "Cancelled"
      | "TimedOut";
    /** Run (summary) */
    "run-summary": {
      id?: string;
      state?: string;
      result?: string;
    };
    "task-error": {
      errorCode?: string;
      message?: string;
      details?: string;
      bridgeExitCode?: number;
      system?: string;
      phase?: string;
      category?: string;
      descriptionKey?: string;
      description?: string;
      kbArticleLink?: string;
      canUserFix?: boolean;
    };
    /** StorageFile (prefer return=minimal) */
    "storage-file-prefer-return-minimal": {
      sourceFiles?: components["schemas"]["storage-file-summary"][];
    };
    /** StorageFile (prefer return=representation) */
    "storage-file-prefer-return-representation": {
      sourceFiles?: components["schemas"]["StorageFile"][];
    };
    /** StorageFile response */
    "storage-file-response": {
      sourceFile?: components["schemas"]["StorageFile"];
    };
    StorageFile: {
      id?: string;
      storageFileId?: string;
      connectorType?: components["schemas"]["connector-type"];
      lastKnownFileName?: string;
      _links?: components["schemas"]["file-links"];
    };
    /** StorageFile (summary) */
    "storage-file-summary": {
      id?: string;
      storageFileId?: string;
      lastKnownFileName?: string;
      _links?: components["schemas"]["file-links"];
    };
    /** StorageFile (create) */
    "storage-file-create": {
      storageFileId: string;
      connectorType: components["schemas"]["connector-type"];
    };
    ManifestFile: {
      id?: string;
      sourceFileId?: string;
      _links?: components["schemas"]["file-links"];
    };
    /** ManifestFile (summary) */
    "manifest-file-summary": {
      id?: string;
      sourceFileId?: string;
      _links?: components["schemas"]["file-links"];
    };
    /** ManifestFile (create) */
    "manifest-file-create": {
      sourceFileId: string;
    };
    /** Connection Links */
    "connection-links": {
      iModel?: components["schemas"]["Link"];
      project?: components["schemas"]["Link"];
      lastRun?: components["schemas"]["Link"];
    };
    /** File Links */
    "file-links": {
      file?: components["schemas"]["Link"];
    };
    Link: {
      href?: string;
    };
    Links: {
      self?: components["schemas"]["Link"];
      next?: components["schemas"]["Link"];
      prev?: components["schemas"]["Link"];
    };
    /**
     * Connector type
     * @description One of 'AUTOPLANT', 'AVEVAPID', 'CIVIL', 'CIVIL3D', 'DWG', 'GEOSPATIAL', 'IFC', 'MSTN', 'NWD', 'OBD', 'OPENTOWER', 'REVIT', 'SPPID', 'SPXREVIEW'. Name of the Connector that is used for synchronization.
     */
    "connector-type":
      | "AUTOPLANT"
      | "AVEVAPID"
      | "CIVIL"
      | "CIVIL3D"
      | "DWG"
      | "GEOSPATIAL"
      | "IFC"
      | "MSTN"
      | "NWD"
      | "OBD"
      | "OPENTOWER"
      | "REVIT"
      | "SPPID"
      | "SPXREVIEW";
    /** @description Contains error information and an optional array of more specific errors. */
    Error: {
      /** @description One of a server-defined set of error codes. */
      code: string;
      /** @description A human-readable representation of the error. */
      message: string;
      /** @description Optional array of more specific errors. */
      details?: components["schemas"]["ErrorDetails"][];
    };
    /**
     * Error Details
     * @description Contains error information.
     */
    ErrorDetails: {
      /** @description One of a server-defined set of error codes. */
      code: string;
      /** @description A human-readable representation of the error. */
      message: string;
    };
    /**
     * Error Response
     * @description Gives details for an error that occurred while handling the request. Note that clients MUST NOT assume that every failed request will produce an object of this schema, or that all of the properties in the response will be non-null, as the error may have prevented this response from being constructed.
     */
    ErrorResponse: {
      error: components["schemas"]["Error"];
    };
  };
}

export interface operations {
  /**
   * ---
   *
   * Runs the specified StorageConnection.
   *
   * ### Notes
   *
   * When a run is successfully created, the operation returns HTTP status code 202/accepted - the request is accepted for processing and will execute in background. The response will include a location header pointing to the created run. If an existing active run already exists for the iModel, a new run is not initiated, instead 303/see other is returned along with location header pointing to that existing active run.
   * In the rare event that multiple create run requests are being made simultaneously, only the first request is processed and 409/conflict is returned for others.
   *
   * ### Authentication
   *
   * Requires `Authorization` header with valid Bearer token for scope `synchronization:modify`.
   *
   * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
   *
   * ---
   */
  "run-storage-connection": {
    parameters: {
      path: {
        /** Connection Id */
        connectionId: string;
      };
      header: {
        /** OAuth access token with scope `synchronization:modify` */
        Authorization: string;
        /** Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended. */
        Accept?: "application/vnd.bentley.itwin-platform.v1+json";
      };
    };
    responses: {
      /** Accepted */
      202: unknown;
      /** This response indicates that an active run is in progress and link is provided in location header. */
      303: never;
      /** This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed. */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that user does not have required permissions to run specified connection. */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the specified connection not found. */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** A run request is already being processed. */
      409: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** Invalid request to get run connection. */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the user has sent too many requests in a given amount of time. */
      429: {
        headers: {
          /** The number of requests exceeds the rate-limit for the client subscription. */
          "retry-after": string;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /**
   * ---
   *
   * Retrieves SourceFiles for specified StorageConnection.
   *
   * ### Notes
   *
   * The `Prefer` header can be used to specify how much result metadata is desired by the client. The `Prefer` request header field is used to indicate that particular server behaviors are preferred by the client but are not required for successful completion of the request.
   *
   * This operation supports `"return=representation"` and `"return=minimal"` preferences.
   *
   * The `"return=representation"` preference indicates that the client prefers that the server include an entity representing the current state of the resource in the response to a successful request.
   * The `"return=minimal"` preference indicates that the client wishes the server to return only a minimal response to a successful request. This is the default preference if `Prefer` header is not specified.
   *
   * ### Authentication
   *
   * Requires `Authorization` header with valid Bearer token for scope `synchronization:read`.
   *
   * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
   *
   * ---
   */
  "get-storage-connection-sourcefiles": {
    parameters: {
      path: {
        /** Connection Id */
        connectionId: string;
      };
      header: {
        /** OAuth access token with scope `synchronization:read` */
        Authorization: string;
        /** Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended. */
        Accept?: "application/vnd.bentley.itwin-platform.v1+json";
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json;minimal": components["schemas"]["storage-file-prefer-return-minimal"];
          "application/json;representation": components["schemas"]["storage-file-prefer-return-representation"];
        };
      };
      /** This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed. */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that user does not have required permissions to get specified connection sourceFiles. */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** Invalid request to get connection sourcefiles. */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the user has sent too many requests in a given amount of time. */
      429: {
        headers: {
          /** The number of requests exceeds the rate-limit for the client subscription. */
          "retry-after": string;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /**
   * ---
   *
   * Add a new Storage Source File to a Storage Connection
   *
   * ### Authentication
   *
   * Requires `Authorization` header with valid Bearer token for scope `synchronization:modify`.
   *
   * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
   *
   * ### Associated entities
   * SourceFile is added to a Connection. The reuqest path must contain a valid Connection ID
   *
   * ---
   */
  "add-storage-connection-sourcefile": {
    parameters: {
      path: {
        /** Connection Id */
        connectionId: string;
      };
      header: {
        /** OAuth access token with scope `synchronization:modify` */
        Authorization: string;
        /** Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended. */
        Accept?: "application/vnd.bentley.itwin-platform.v1+json";
      };
    };
    responses: {
      /** Storage Connection sourceFile successfully added. */
      201: {
        content: {
          "application/json": components["schemas"]["storage-file-response"];
        };
      };
      /** This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed. */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** The SourceFile is already mapped to the iModel. */
      409: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** Invalid request to add connection sourcefile. Request payload might be missing some of the required properties. */
      422: {
        content: {
          "application/json;InvalidStorageConnectionSourceFileRequest": components["schemas"]["ErrorResponse"];
          "application/json;MissingRequestBody": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the user has sent too many requests in a given amount of time. */
      429: {
        headers: {
          /** The number of requests exceeds the rate-limit for the client subscription. */
          "retry-after": string;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["storage-file-create"];
      };
    };
  };
  /**
   * ---
   *
   * Retrieves StorageConnection's SourceFile with the specified ID.
   *
   * ### Authentication
   *
   * Requires `Authorization` header with valid Bearer token for scope `synchronization:read`.
   *
   * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
   *
   * ---
   */
  "get-storage-connection-sourcefile": {
    parameters: {
      path: {
        /** Connection Id */
        connectionId: string;
        sourceFileId: string;
      };
      query: {
        /** The [$top](https://www.odata.org/getting-started/basic-tutorial/#topskip) system query option requests the number of items in the queried collection to be included in the result. */
        $top?: number;
        /** The [$skip](https://www.odata.org/getting-started/basic-tutorial/#topskip) query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
        $skip?: number;
      };
      header: {
        /** OAuth access token with scope `synchronization:read` */
        Authorization: string;
        /** Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended. */
        Accept?: "application/vnd.bentley.itwin-platform.v1+json";
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["storage-file-response"];
        };
      };
      /** Invalid request to get connection sourceFile */
      400: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed. */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that user does not have required permissions to get specified connection sourceFile. */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the specified connection sourceFile not found. */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** Invalid request to get connection sourcefile. */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the user has sent too many requests in a given amount of time. */
      429: {
        headers: {
          /** The number of requests exceeds the rate-limit for the client subscription. */
          "retry-after": string;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /**
   * ---
   *
   * Update an existing StorageConnection SourceFile.
   *
   * ### Authentication
   *
   * Requires `Authorization` header with valid Bearer token for scope `synchronization:modify`.
   *
   * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
   *
   * ### Associated entities
   * SourceFile is related to a Connection. The path must contain a valid Connection ID.
   *
   * ---
   */
  "update-storage-connection-sourcefile": {
    parameters: {
      path: {
        /** Connection Id */
        connectionId: string;
        sourceFileId: string;
      };
      header: {
        /** OAuth access token with scope `synchronization:modify` */
        Authorization: string;
        /** Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended. */
        Accept?: "application/vnd.bentley.itwin-platform.v1+json";
      };
    };
    responses: {
      /** Connection sourceFile successfully updated. */
      200: {
        content: {
          "application/json": components["schemas"]["storage-file-response"];
        };
      };
      /** This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed. */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that one of the associated entities could not be found. */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** Invalid request to update connection sourcefile. Request payload might be missing some of the required properties. */
      422: {
        content: {
          "application/json;InvalidStorageConnectionSourceFileRequest": components["schemas"]["ErrorResponse"];
          "application/json;MissingRequestBody": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the user has sent too many requests in a given amount of time. */
      429: {
        headers: {
          /** The number of requests exceeds the rate-limit for the client subscription. */
          "retry-after": string;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["storage-file-create"];
      };
    };
  };
  /**
   * ---
   *
   * Delete StorageConnection SourceFile
   *
   * ### Authentication
   *
   * Requires `Authorization` header with valid Bearer token for scope `synchronization:modify`.
   *
   * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
   *
   *
   * ---
   */
  "remove-storage-connection-sourcefile": {
    parameters: {
      path: {
        /** Connection Id */
        connectionId: string;
        /** SourceFile Id */
        sourceFileId: string;
      };
      header: {
        /** OAuth access token with scope `synchronization:modify` */
        Authorization: string;
        /** Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended. */
        Accept?: "application/vnd.bentley.itwin-platform.v1+json";
      };
    };
    responses: {
      /** No Content */
      204: never;
      /** This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed. */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that one of the associated entities could not be found. */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** Invalid request to remove connection sourcefile. */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the user has sent too many requests in a given amount of time. */
      429: {
        headers: {
          /** The number of requests exceeds the rate-limit for the client subscription. */
          "retry-after": string;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /**
   * ---
   *
   * Create a StorageConnection that describes files from Storage to synchronize to the iModel.
   *
   * ### Authentication
   *
   * Requires `Authorization` header with valid Bearer token for scope `synchronization:modify`.
   *
   * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
   *
   * ### Associated entities
   *
   * A connection is linked with an iModel. An iModel ID is required to be set when creating a StorageConnection.
   *
   * ---
   */
  "create-storage-connection": {
    parameters: {
      header: {
        /** OAuth access token with scope `synchronization:modify` */
        Authorization: string;
        /** Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended. */
        Accept?: "application/vnd.bentley.itwin-platform.v1+json";
      };
    };
    responses: {
      /** Connection successfully created. */
      201: {
        content: {
          "application/json": components["schemas"]["storage-connection-response"];
        };
      };
      /** This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed. */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** One or more SourceFiles are already mapped to the iModel. */
      409: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** Invalid request to create connection. Request payload might be missing some of the required properties. */
      422: {
        content: {
          "application/json;InvalidStorageConnectionRequest": components["schemas"]["ErrorResponse"];
          "application/json;MissingRequestBody": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the user has sent too many requests in a given amount of time. */
      429: {
        headers: {
          /** The number of requests exceeds the rate-limit for the client subscription. */
          "retry-after": string;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["storage-connection-create"];
      };
    };
  };
  /**
   * ---
   *
   * Retrieves a StorageConnection with the specified ID.
   *
   * ### Authentication
   *
   * Requires `Authorization` header with valid Bearer token for scope `synchronization:read`.
   *
   * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
   *
   * ---
   */
  "get-storage-connection": {
    parameters: {
      path: {
        /** Connection Id */
        connectionId: string;
      };
      header: {
        /** OAuth access token with scope `synchronization:read` */
        Authorization: string;
        /** Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended. */
        Accept?: "application/vnd.bentley.itwin-platform.v1+json";
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["storage-connection-response"];
        };
      };
      /** This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed. */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that user does not have required permissions to get specified connection. */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the specified connection not found. */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** Invalid request to get a connection. */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the user has sent too many requests in a given amount of time. */
      429: {
        headers: {
          /** The number of requests exceeds the rate-limit for the client subscription. */
          "retry-after": string;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /**
   * ---
   *
   * Update an existing StorageConnection.
   *
   * ### Authentication
   *
   * Requires `Authorization` header with valid Bearer token for scope `synchronization:modify`.
   *
   * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
   *
   * ### Associated entities
   *
   * A connection is linked with an iModel. The iModel ID is required to be set when updating a StorageConnection.
   *
   * ---
   */
  "update-storage-connection": {
    parameters: {
      path: {
        /** Connection Id */
        connectionId: string;
      };
      header: {
        /** OAuth access token with scope `synchronization:modify` */
        Authorization: string;
        /** Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended. */
        Accept?: "application/vnd.bentley.itwin-platform.v1+json";
      };
    };
    responses: {
      /** Connection successfully updated. */
      200: {
        content: {
          "application/json": components["schemas"]["storage-connection-response"];
        };
      };
      /** This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed. */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the specified connection not found. */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** Invalid request to update connection. Request payload might be missing some of the required properties. */
      422: {
        content: {
          "application/json;InvalidStorageConnectionRequest": components["schemas"]["ErrorResponse"];
          "application/json;MissingRequestBody": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the user has sent too many requests in a given amount of time. */
      429: {
        headers: {
          /** The number of requests exceeds the rate-limit for the client subscription. */
          "retry-after": string;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["storage-connection-create"];
      };
    };
  };
  /**
   * ---
   *
   * Delete connection
   *
   * ### Authentication
   *
   * Requires `Authorization` header with valid Bearer token for scope `synchronization:modify`.
   *
   * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
   *
   *
   * ---
   */
  "delete-storage-connection": {
    parameters: {
      path: {
        /** Connection Id */
        connectionId: string;
      };
      header: {
        /** OAuth access token with scope `synchronization:modify` */
        Authorization: string;
        /** Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended. */
        Accept?: "application/vnd.bentley.itwin-platform.v1+json";
      };
    };
    responses: {
      /** No Content */
      204: never;
      /** This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed. */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the specified connection not found. */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** Invalid request to delete connection. */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the user has sent too many requests in a given amount of time. */
      429: {
        headers: {
          /** The number of requests exceeds the rate-limit for the client subscription. */
          "retry-after": string;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /**
   * ---
   *
   * Retrieves connections for the specified iModel.
   *
   * ### Notes
   *
   * The `Prefer` header can be used to specify how much result metadata is desired by the client. The `Prefer` request header field is used to indicate that particular server behaviors are preferred by the client but are not required for successful completion of the request.
   *
   * This operation supports `"return=representation"` and `"return=minimal"` preferences.
   *
   * The `"return=representation"` preference indicates that the client prefers that the server include an entity representing the current state of the resource in the response to a successful request.
   * The `"return=minimal"` preference indicates that the client wishes the server to return only a minimal response to a successful request. This is the default preference if `Prefer` header is not specified.
   *
   * ### Authentication
   *
   * Requires `Authorization` header with valid Bearer token for scope `synchronization:read`.
   *
   * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
   *
   * ---
   */
  "get-connections": {
    parameters: {
      query: {
        /** iModel Id */
        imodelId: string;
        /** The [$top](https://www.odata.org/getting-started/basic-tutorial/#topskip) system query option requests the number of items in the queried collection to be included in the result. */
        $top?: number;
        /** The [$skip](https://www.odata.org/getting-started/basic-tutorial/#topskip) query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
        $skip?: number;
      };
      header: {
        /** OAuth access token with scope `synchronization:read` */
        Authorization: string;
        /** Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended. */
        Accept?: "application/vnd.bentley.itwin-platform.v1+json";
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json;minimal": components["schemas"]["connections-prefer-return-minimal"];
          "application/json;representation": components["schemas"]["connections-prefer-return-representation"];
        };
      };
      /** This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed. */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that user does not have required permissions to get specified connections. */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** Invalid request to get connections. */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the user has sent too many requests in a given amount of time. */
      429: {
        headers: {
          /** The number of requests exceeds the rate-limit for the client subscription. */
          "retry-after": string;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /**
   * ---
   *
   * Retrieves a ManifestConnection Run with the specified ID.
   *
   * ### Authentication
   *
   * Requires `Authorization` header with valid Bearer token for scope `synchronization:read`.
   *
   * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
   *
   * ---
   */
  "get-manifest-connection-run": {
    parameters: {
      path: {
        /** Connection Id */
        connectionId: string;
        /** Run Id */
        runId: string;
      };
      header: {
        /** OAuth access token with scope `synchronization:read` */
        Authorization: string;
        /** Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended. */
        Accept?: "application/vnd.bentley.itwin-platform.v1+json";
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["manifest-run-response"];
        };
      };
      /** This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed. */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that user does not have required permissions to get specified connection run. */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the specified connection run not found. */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** Invalid request to get connection run. */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the user has sent too many requests in a given amount of time. */
      429: {
        headers: {
          /** The number of requests exceeds the rate-limit for the client subscription. */
          "retry-after": string;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /**
   * ---
   *
   * Retrieves a ManifestConnection with the specified ID.
   *
   * ### Authentication
   *
   * Requires `Authorization` header with valid Bearer token for scope `synchronization:read`.
   *
   * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
   *
   * ---
   */
  "get-manifest-connection": {
    parameters: {
      path: {
        /** Connection Id */
        connectionId: string;
      };
      header: {
        /** OAuth access token with scope `synchronization:read` */
        Authorization: string;
        /** Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended. */
        Accept?: "application/vnd.bentley.itwin-platform.v1+json";
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["manifest-connection-response"];
        };
      };
      /** This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed. */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that user does not have required permissions to get specified connection. */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the specified connection was not found. */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the user has sent too many requests in a given amount of time. */
      429: {
        headers: {
          /** The number of requests exceeds the rate-limit for the client subscription. */
          "retry-after": string;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /**
   * ---
   *
   * Delete connection
   *
   * ### Authentication
   *
   * Requires `Authorization` header with valid Bearer token for scope `synchronization:modify`.
   *
   * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
   *
   *
   * ---
   */
  "delete-manifest-connection": {
    parameters: {
      path: {
        /** Connection Id */
        connectionId: string;
      };
      header: {
        /** OAuth access token with scope `synchronization:modify` */
        Authorization: string;
        /** Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended. */
        Accept?: "application/vnd.bentley.itwin-platform.v1+json";
      };
    };
    responses: {
      /** No Content */
      204: never;
      /** This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed. */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the specified connection was not found. */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** Invalid request to delete connection. */
      422: {
        content: {
          "application/json;InvalidManifestConnectionRequest": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the user has sent too many requests in a given amount of time. */
      429: {
        headers: {
          /** The number of requests exceeds the rate-limit for the client subscription. */
          "retry-after": string;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /**
   * ---
   *
   * Create a ManifestConnection that describes which files from a manifest will be synchronized to the iModel.
   *
   * ### Authentication
   *
   * Requires `Authorization` header with valid Bearer token for scope `synchronization:modify`.
   *
   * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
   *
   * ### Associated entities
   *
   * A connection is linked with an iModel. An iModel ID is required to be set when creating a ManifestConnection.
   *
   * ---
   */
  "create-manifest-connection": {
    parameters: {
      header: {
        /** OAuth access token with scope `synchronization:modify` */
        Authorization: string;
        /** Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended. */
        Accept?: "application/vnd.bentley.itwin-platform.v1+json";
      };
    };
    responses: {
      /** Connection successfully created. */
      201: {
        content: {
          "application/json": components["schemas"]["manifest-connection-response"];
        };
      };
      /** This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed. */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** One or more SourceFiles are already mapped to the iModel. */
      409: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** Invalid request to create connection. Request payload might be missing some of the required properties. */
      422: {
        content: {
          "application/json;InvalidManifestConnectionRequest": components["schemas"]["ErrorResponse"];
          "application/json;MissingRequestBody": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the user has sent too many requests in a given amount of time. */
      429: {
        headers: {
          /** The number of requests exceeds the rate-limit for the client subscription. */
          "retry-after": string;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["manifest-connection-create"];
      };
    };
  };
  /**
   * ---
   *
   * Runs the specified ManifestConnection.
   *
   * ### Notes
   *
   * When a run is successfully created, the operation returns HTTP status code 202/accepted - the request is accepted for processing and will execute in background. The response will include a location header pointing to the created run. If an existing active run already exists for the iModel, a new run is not initiated, instead 303/see other is returned along with location header pointing to that existing active run.
   * In the rare event that multiple create run requests are being made simultaneously, only the first request is processed and 409/conflict is returned for others.
   *
   * ### Authentication
   *
   * Requires `Authorization` header with valid Bearer token for scope `synchronization:modify`.
   *
   * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
   *
   * ---
   */
  "create-manifest-connection-run": {
    parameters: {
      path: {
        /** Connection Id */
        connectionId: string;
      };
      header: {
        /** OAuth access token with scope `synchronization:modify` */
        Authorization: string;
        /** Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended. */
        Accept?: "application/vnd.bentley.itwin-platform.v1+json";
      };
    };
    responses: {
      /** Accepted */
      202: unknown;
      /** This response indicates that an active run is in progress and link is provided in location header. */
      303: never;
      /** This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed. */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that user does not have required permissions to run specified connection. */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the specified connection not found. */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** A run request is already being processed. */
      409: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** Invalid request to create a connection run. */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
          "application/json;MissingRequestBody": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the user has sent too many requests in a given amount of time. */
      429: {
        headers: {
          /** The number of requests exceeds the rate-limit for the client subscription. */
          "retry-after": string;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["manifest-run-create"];
      };
    };
  };
  /**
   * ---
   *
   * Retrieves all Runs for the specified connection.
   *
   * ### Notes
   *
   * The `Prefer` header can be used to specify how much result metadata is desired by the client. The `Prefer` request header field is used to indicate that particular server behaviors are preferred by the client but are not required for successful completion of the request.
   *
   * This operation supports `"return=representation"` and `"return=minimal"` preferences.
   *
   * The `"return=representation"` preference indicates that the client prefers that the server include an entity representing the current state of the resource in the response to a successful request.
   * The `"return=minimal"` preference indicates that the client wishes the server to return only a minimal response to a successful request. This is the default preference if `Prefer` header is not specified.
   *
   * ### Authentication
   *
   * Requires `Authorization` header with valid Bearer token for scope `synchronization:read`.
   *
   * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
   *
   * ---
   */
  "get-storage-connection-runs": {
    parameters: {
      path: {
        /** Connection Id */
        connectionId: string;
      };
      header: {
        /** OAuth access token with scope `synchronization:read` */
        Authorization: string;
        /** Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended. */
        Accept?: "application/vnd.bentley.itwin-platform.v1+json";
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json;minimal": components["schemas"]["storage-runs-prefer-return-minimal"];
          "application/json;representation": components["schemas"]["storage-runs-prefer-return-representation"];
        };
      };
      /** This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed. */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that user does not have required permissions to get specified connection runs. */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** Invalid request to get connection. */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the user has sent too many requests in a given amount of time. */
      429: {
        headers: {
          /** The number of requests exceeds the rate-limit for the client subscription. */
          "retry-after": string;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /**
   * ---
   *
   * Retrieves a StorageConnection Run with the specified ID.
   *
   * ### Authentication
   *
   * Requires `Authorization` header with valid Bearer token for scope `synchronization:read`.
   *
   * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
   *
   * ---
   */
  "get-storage-connection-run": {
    parameters: {
      path: {
        /** Connection Id */
        connectionId: string;
        /** Run Id */
        runId: string;
      };
      query: {
        /** The [$top](https://www.odata.org/getting-started/basic-tutorial/#topskip) system query option requests the number of items in the queried collection to be included in the result. */
        $top?: number;
        /** The [$skip](https://www.odata.org/getting-started/basic-tutorial/#topskip) query option requests the number of items in the queried collection that are to be skipped and not included in the result. */
        $skip?: number;
      };
      header: {
        /** OAuth access token with scope `synchronization:read` */
        Authorization: string;
        /** Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended. */
        Accept?: "application/vnd.bentley.itwin-platform.v1+json";
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["storage-run-response"];
        };
      };
      /** This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed. */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that user does not have required permissions to get specified connection run. */
      403: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the specified connection run not found. */
      404: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** Invalid request to get connection run. */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the user has sent too many requests in a given amount of time. */
      429: {
        headers: {
          /** The number of requests exceeds the rate-limit for the client subscription. */
          "retry-after": string;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
  /**
   * ---
   *
   * Retrieves the calling user's AuthorizationInformation.
   *
   * ### Authentication
   *
   * Requires `Authorization` header with valid Bearer token for scope `synchronization:read`.
   *
   * For more documentation on authorization and how to get access token visit [OAUTH2 Authorization](https://developer.bentley.com/apis/overview/authorization/) page.
   *
   * ---
   */
  "get-authorization-information": {
    parameters: {
      query: {
        /** URL to redirect back to after authorization */
        redirectUrl: string;
      };
      header: {
        /** OAuth access token with scope `synchronization:read` */
        Authorization: string;
        /** Setting to `application/vnd.bentley.itwin-platform.v1+json` is recommended. */
        Accept?: "application/vnd.bentley.itwin-platform.v1+json";
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["authorization-information-response"];
        };
      };
      /** This response indicates that request lacks valid authentication credentials. Access token might not been provided, issued by the wrong issuer, does not have required scopes or request headers were malformed. */
      401: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** Invalid request to get a connection. */
      422: {
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
      /** This response indicates that the user has sent too many requests in a given amount of time. */
      429: {
        headers: {
          /** The number of requests exceeds the rate-limit for the client subscription. */
          "retry-after": string;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse"];
        };
      };
    };
  };
}

export interface external {}
